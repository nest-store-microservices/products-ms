## Dependencies
FROM node:21-alpine3.19 as deps

WORKDIR /usr/src/app
COPY package.json ./
COPY package-lock.json ./

RUN npm install 


## Builder
FROM node:21-alpine3.19 as builder
WORKDIR /usr/src/app

# traemos los node_modules instalados en deps
COPY --from=deps /usr/src/app/node_modules ./node_modules

# instalamos globalmente Nest CLI para poder usar `nest build`
RUN npm install -g @nestjs/cli

# copiamos el resto del código
COPY . .

# ahora sí compilamos
RUN npm run build

# instalamos solo deps de producción
RUN npm ci -f --only=production && npm cache clean --force
RUN npx prisma generate

## Runner
FROM node:21-alpine3.19 as runner
WORKDIR /usr/src/app
COPY --from=builder /usr/src/app/node_modules ./node_modules
COPY --from=builder /usr/src/app/dist ./dist
COPY --from=builder /usr/src/app/prisma ./prisma

ENV NODE_ENV=production

USER node 

EXPOSE 3000
CMD ["node", "dist/main.js"]
# docker build -t client-gateway:latest -f dockerfile.prod .